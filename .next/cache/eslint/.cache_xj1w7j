[{"D:\\Globus\\pages\\api\\email.js":"1","D:\\Globus\\pages\\api\\hello.js":"2","D:\\Globus\\pages\\index.js":"3","D:\\Globus\\pages\\_app.js":"4","D:\\Globus\\components\\Cover.js":"5","D:\\Globus\\components\\Navbar.js":"6"},{"size":858,"mtime":1695670280138,"results":"7","hashOfConfig":"8"},{"size":170,"mtime":1674150440000,"results":"9","hashOfConfig":"8"},{"size":43963,"mtime":1695702937217,"results":"10","hashOfConfig":"8"},{"size":137,"mtime":1674150440000,"results":"11","hashOfConfig":"8"},{"size":33226,"mtime":1695669114549,"results":"12","hashOfConfig":"8"},{"size":2581,"mtime":1674150440000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"ynhx0j",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"D:\\Globus\\pages\\api\\email.js",["35"],[],"export default function (req, res) {\n    require('dotenv').config()\n  \n    let nodemailer = require('nodemailer')\n    const transporter = nodemailer.createTransport({\n      port: 465,\n      host: \"mail.globuschain.com\",\n      auth: {\n        user: 'mail@globuschain.com',\n        pass: process.env.password,\n      },\n      secure: true,\n    });\n  \n    const mailData = {\n      from: 'mail@globuschain.com',\n      to: 'info@globuschain.com',\n      subject: 'Globuschain Contact Form',\n      text: `Form Submitted \\nFullname: ${req.body.name} \\nEmail: ${req.body.email} \\nTelegram: ${req.body.telegram} \\n Message: ${req.body.message}`,\n      html: ''\n    }\n  \n    transporter.sendMail(mailData, function (err, info) {\n      if (err)\n        console.log(err)\n      else\n        console.log(info);\n    })\n  \n    console.log(req.body)\n    res.send('success')\n  }","D:\\Globus\\pages\\api\\hello.js",[],[],"D:\\Globus\\pages\\index.js",["36","37","38","39","40","41","42","43"],[],"D:\\Globus\\pages\\_app.js",[],[],"D:\\Globus\\components\\Cover.js",["44","45","46"],[],"import styles from \"../styles/Cover.module.css\"\nimport Link from \"next/link\"\nimport React,{ useState } from \"react\";\nimport { useEffect } from \"react\";\nlet Web3 = require('web3')\n\nvar balance_;\nvar minPurchase_;\nvar maxPurchase_;\nvar rate_;\nlet bscscanTokenUrl_;\nlet bscscanContractUrl_;\nlet tokenImageUrl_;\nlet audited_;\nlet verified_;\nlet percentage_;\nlet totalSupply_;\nlet tokenForPresale_;\n\n\nconst MyComponent = () => {\n\n    let tokenData = {\n        \"id\": \"1\",\n        \"token\": \"0x30e55D4C732DdEc11a45C897D1D8fce3c6EDEfCc\",\n        \"presaleContract\": \"0x3d4658FA45fd6c93B1628e97a7EEBC1F036c530C\",\n        \"contractABI\": \"\",\n        \"tokenIconURL\": \"/globus-logo-short.png\",\n        \"tokenName\": \"Globus Smart Coin\",\n        \"tokenSymbol\": \"GLSC\",\n        \"tokenForPresaleInitial\": \"2\",\n        \"tokenForPresaleNumberOfZeros\": \"14\",\n        \"totalSupplyInitial\": \"1\",\n        \"totalSupplyNumberOfZeros\": \"15\",\n        \"decimals\": \"18\",\n        \"hardCap\": \"4000000000000000000000\",\n        \"rate\": \"2600000000\",\n        \"type\": \"BEP20\",\n        \"presaleRunning\": \"false\",\n        \"kycVerified\": \"\",\n        \"smartContractAudit\": \"\",\n    }\n    // https://github.com/kredict/audit/blob/main/globusaudit.pdf\n\n    const [web3, setWeb3] = useState(null)\n    const [address, setAddress] = useState(null)\n    const [contract, setContract] = useState(null)\n    const [balance, setBalance] = useState(null)\n\n    // let abi = JSON.parse(tokenData.contractABI);\n    let abi = [\n        {\n            \"inputs\": [],\n            \"name\": \"buyTokens\",\n            \"outputs\": [],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"beneficiary\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"collectLeftTokens\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"beneficiary\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"collectOwnableAmount\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"OwnerCollectedBNB\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"tokens\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"OwnerCollectedTOKEN\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"startedBy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"PresaleStarted\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"stoppedBy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"PresaleStoped\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"status\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"name\": \"setStatus\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract IERC20\",\n                    \"name\": \"token\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"tokenName\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"tokenSymbol\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"rate\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"weiRaised\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"totalSupply\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"minPurchase\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"maxPurchase\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"startTime\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"endTime\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"softCap\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"startPresale\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"stopPresale\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"buyer\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"beneficiary\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"TokensPurchased\",\n            \"type\": \"event\"\n        },\n        {\n            \"stateMutability\": \"payable\",\n            \"type\": \"receive\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_admin\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_decimals\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_endTime\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_maxPurchase\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_minPurchase\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_owner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_presaleStarted\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_presaleStatus\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_softCap\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_startTime\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_token\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract IERC20\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_tokenName\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_tokenSymbol\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_totalSupply\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"_weiRaised\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"holders\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"host\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"TokenBalanceOf\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }\n    ]\n    let contractAddress = tokenData.presaleContract;\n\n    useEffect(() => {\n        let endTime_;\n\n        window.ethereum ?\n            ethereum.request({ method: \"eth_requestAccounts\" }).then((accounts) => {\n                setAddress(accounts[0])\n                let w3 = new Web3(ethereum)\n                setWeb3(w3)\n\n                let _balance = w3.eth.getBalance(accounts[0]).then((_balance) => {\n                    document.getElementById(\"balance-text\").innerHTML = (_balance / 10 ** 18).toString().slice(0, 7)\n                    balance_ = _balance\n                })\n\n                let c = new w3.eth.Contract(abi, contractAddress)\n                setContract(c)\n\n                c.methods._totalSupply().call().then((_supply) => {\n                    _supply = _supply / 10 ** 18\n                    document.getElementById('total-supply').innerHTML = _supply;\n                    // document.getElementById('remaing-token').innerHTML = _supply;\n                }).catch((err) => console.log(err))\n\n                c.methods._softCap().call().then((_hardCap) => {\n                    _hardCap = _hardCap / 10 ** 18;\n                    document.getElementById('hard-cap').innerHTML = _hardCap;\n                }).catch((err) => console.log(err))\n\n                // c.methods._rate().call().then((_rate) => {\n                //     document.getElementById('rate').innerHTML = _rate;\n                // }).catch((err) => console.log(err))\n\n                c.methods._weiRaised().call().then((_weiRaised) => {\n                    let _bnb = _weiRaised / 10 ** 18;\n                    document.getElementById('amount-raised').innerHTML = _bnb + \" BNB\";\n                    let percentage = (_bnb / tokenData.hardCap*10**18) * 100\n                    document.getElementById('bar-percentage').style.width = percentage.toString();\n                    document.getElementById('target-percentage').innerHTML = percentage.toString().slice(0, 7) + \" %\"\n                    localStorage.setItem(\"percentage\", percentage);\n\n                    percentage_ = percentage;\n                }).catch((err) => console.log(err))\n\n                c.methods._minPurchase().call().then((minAmount) => {\n                    minPurchase_ = minAmount\n                }).catch((err) => console.log(err))\n\n                c.methods._maxPurchase().call().then((maxAmount) => {\n                    maxPurchase_ = maxAmount\n                }).catch((err) => console.log(err))\n                c.methods.host().call().then((host) => {\n                    document.getElementById('host').innerHTML = host + \" \";\n                }).catch((err) => console.log(err))\n\n                // c.methods._endTime().call().then((endTime) => {\n                //     endTime = 0 // to stop timer\n                //     const day = document.getElementById('days');\n                //     const hr = document.getElementById('hours');\n                //     const min = document.getElementById('minutes');\n                //     const sec = document.getElementById('seconds');\n\n                //     const eventDate = endTime * 1000;\n                //     const id = setInterval(() => {\n                //         const now = new Date().getTime();\n                //         // if (now > eventDate)\n                //         const diff = eventDate - now;\n\n                //         const d = Math.floor(eventDate / (1000 * 60 * 60 * 24) - (now / (1000 * 60 * 60 * 24)));\n                //         const h = Math.floor((eventDate / (1000 * 60 * 60) - (now / (1000 * 60 * 60))) % 24);\n                //         const m = Math.floor((eventDate / (1000 * 60) - (now / (1000 * 60))) % 60);\n                //         const s = Math.floor((eventDate / (1000) - (now / (1000))) % 60);\n\n                //         if (diff > 0) {\n                //             day.innerHTML = d;\n                //             hr.innerHTML = h;\n                //             min.innerHTML = m;\n                //             sec.innerHTML = s;\n                //         }\n                //         else {\n                //             day.innerHTML = 0;\n                //             hr.innerHTML = 0;\n                //             min.innerHTML = 0;\n                //             sec.innerHTML = 0;\n                //         }\n                //     }, 1000);\n\n                // }).catch((err) => console.log(err))\n\n                c.methods._presaleStatus().call().then((_status) => {\n                    let status;\n                    if (_status) {\n                        status = \"ACTIVE\";\n                    }\n                    else {\n                        status = \"PAUSED\";\n                    }\n                    // document.getElementById(\"presale-status\").innerHTML = _status;\n\n                }).catch((err) => console.log(err))\n\n                // Disabling buy button initially\n                document.getElementById(\"buy-button\").disabled = true;\n                document.getElementById(\"buy-button\").style.background = \"black\"\n                document.getElementById(\"buy-button\").style.boxShadow = \"none\"\n                document.getElementById(\"buy-button\").style.cursor = \"not-allowed\"\n\n                if (tokenData.instagram == \"\") {\n                    document.getElementById('instagram').style.display = \"none\";\n                }\n                if (tokenData.facebook == \"\") {\n                    document.getElementById('facebook').style.display = \"none\";\n                }\n                if (tokenData.website == \"\") {\n                    document.getElementById('website').style.display = \"none\";\n                }\n                if (tokenData.whitepaper == \"\") {\n                    document.getElementById('whitepaper').style.display = \"none\";\n                }\n                if (tokenData.telegram == \"\") {\n                    document.getElementById('telegram').style.display = \"none\";\n                }\n                if (tokenData.twitter == \"\") {\n                    document.getElementById('twitter').style.display = \"none\";\n                }\n                if (tokenData.email == \"\") {\n                    document.getElementById('email').style.display = \"none\";\n                }\n                if (tokenData.smartContractAudit == \"\") {\n                    document.getElementById('audited').style.display = \"none\";\n                }\n                if (tokenData.kycVerified == \"\") {\n                    document.getElementById('verified').style.display = \"none\";\n                }\n                if (tokenData.youtube == \"\") {\n                    document.getElementById('youtube').style.display = \"none\";\n                }\n\n\n            }).catch((err) => console.log(err))\n            : console.log(\"Please install MetaMask\")\n\n\n\n    }, [])\n\n    useEffect(() => {\n\n    })\n\n\n    function buyToken(amount) {\n        let _price = web3.utils.toWei(amount);\n        // let encoded = contract.methods.buyTokens()\n\n        let tx = {\n            from: address,\n            to: contractAddress,\n            value: web3.utils.numberToHex(_price)\n        }\n        let txHash = ethereum.request({\n            method: 'eth_sendTransaction',\n            params: [tx],\n        }).then((hash) => {\n            alert(\"Transaction hash: \" + hash)\n        }).catch((err) => console.log(err))\n\n        return txHash\n    }\n\n    function validateExchangeAmount(e) {\n        document.getElementById(\"error-text\").style.display = \"none\";\n        document.getElementById(\"notice-text\").style.display = \"none\";\n        console.log(minPurchase_, maxPurchase_)\n        let value = document.getElementById('quantity').value;\n        let walletBalance = balance_ / 10 ** 18;\n        let minPurchase = minPurchase_ / 10 ** 18;\n        let maxPurchase = maxPurchase_ / 10 ** 18;\n        var valid = true;\n        if (value > walletBalance) {\n            document.getElementById('quantity').value = Number(walletBalance.toString().slice(0, 6))\n            value = document.getElementById('quantity').value;\n            document.getElementById('notice-text').innerHTML = \"You'll get ~ \" + value * tokenData.rate + \" \" + tokenData.tokenSymbol\n            document.getElementById('notice-text').style.display = \"flex\";\n            validateExchangeAmount()\n        }\n        else if (value < minPurchase) {\n            valid = false\n            document.getElementById(\"error-text\").innerHTML = \"minimum exchnage amount is \" + minPurchase + \" BNB\";\n            document.getElementById(\"error-text\").style.display = \"flex\";\n            document.getElementById(\"buy-button\").disabled = true;\n            document.getElementById(\"buy-button\").style.background = \"black\"\n            document.getElementById(\"buy-button\").style.boxShadow = \"none\"\n            document.getElementById(\"buy-button\").style.cursor = \"not-allowed\"\n        }\n        else if (value > maxPurchase) {\n            valid = false;\n            document.getElementById(\"error-text\").innerHTML = \"maximun exchnage amount is \" + maxPurchase + \" BNB\";\n            document.getElementById(\"error-text\").style.display = \"flex\";\n        }\n        if (valid && walletBalance > minPurchase) {\n            document.getElementById('notice-text').innerHTML = \"You'll get ~ \" + value * tokenData.rate + \" \" + tokenData.tokenSymbol\n            document.getElementById('notice-text').style.display = \"flex\";\n            document.getElementById(\"buy-button\").disabled = false;\n            document.getElementById(\"buy-button\").style.background = \"linear-gradient(to bottom, rgb(255,180,60),rgb(146, 90, 0))\"\n            document.getElementById(\"buy-button\").style.boxShadow = \"0px 0px 5px rgb(255,180,60)\"\n            document.getElementById(\"buy-button\").style.cursor = \"pointer\"\n            document.getElementById(\"buy-button\").style.color = \"black\"\n        }\n    }\n\n    function buyButtonPressed() {\n        let value = document.getElementById('quantity').value;\n        buyToken(value)\n    }\n\n    bscscanTokenUrl_ = \"https://bscscan.com/token/\" + tokenData.token;\n    bscscanContractUrl_ = \"https://bscscan.com/address/\" + tokenData.presaleContract;\n    tokenImageUrl_ = tokenData.tokenIconURL;\n    audited_ = tokenData.smartContractAudit;\n    verified_ = tokenData.kycVerified;\n\n    var zeros = \"\"\n    for (var i = 0; i < tokenData.totalSupplyNumberOfZeros; i++) {\n        zeros += \"0\"\n    }\n    totalSupply_ = tokenData.totalSupplyInitial + zeros;\n\n    zeros = \"\"\n    for (var j = 0; j < tokenData.tokenForPresaleNumberOfZeros; j++) {\n        zeros += \"0\"\n    }\n    tokenForPresale_ = tokenData.tokenForPresaleInitial + zeros;\n\n    useEffect(() => {\n        percentage_ = localStorage.getItem(\"percentage\")\n    })\n\n    function focusPresale() {\n        document.getElementById(\"presale-container\").style.boxShadow = \"0px 0px 10px rgb(255,180,60)\";\n    }\n\n    function copyAddress() {\n        var copyText = document.getElementById(\"contract-address\");\n        // copyText.select();\n        // copyText.setSelectionRange(0, 99999);\n        navigator.clipboard.writeText(copyText.innerHTML);\n        alert(\"Address Copied to Clipboard\");\n    }\n\n\n    const targetDate = new Date('2024-02-01T00:00:00');\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft(targetDate));\n  \n    useEffect(() => {\n      const interval = setInterval(() => {\n        setTimeLeft(calculateTimeLeft(targetDate));\n      }, 1000);\n  \n      return () => clearInterval(interval);\n    }, [targetDate]);\n  \n    function calculateTimeLeft(targetDate) {\n      const now = new Date();\n      const difference = targetDate - now;\n  \n      if (difference <= 0) {\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 };\n      }\n  \n      const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n  \n      return { days, hours, minutes, seconds };\n    }\n  \n\n\n    return (\n        <>\n            <section className={styles.cover}>\n                {/* <img src=\"/\" /> */}\n                <video autoPlay muted loop className={styles.video}>\n                    <source src=\"/cover-video.mp4\" type=\"video/mp4\" />\n                </video>\n\n                <div className={styles.particlesWrapper}>\n                    <div id=\"particles-js\"></div>\n                </div>\n                <div className={styles.tokenPresaleContainer}>\n                    <div className={styles.tokenPresaleContainerInner} id=\"presale-container\">\n                        <div className={styles.cardHeader}>\n                            <div className={styles.logoBlock}>\n                                <img src={tokenImageUrl_} alt=\"token-image\" className={styles.tokenImagePrime} />\n                            </div>\n\n                            <div className={styles.primeBlock}>\n                                <h2 className={styles.tokenNamePrime}>{tokenData.tokenName}</h2>\n                                <p className={styles.exchangeMode}>{tokenData.tokenSymbol} / BNB</p>\n                                <a target=\"_blank\" href={bscscanTokenUrl_} rel=\"noreferrer\">View on Bscscan</a>\n                            </div>\n                            <div className={styles.badgeHeader}>\n                                <a target=\"_blank\" rel=\"noreferrer\" href={tokenData.smartContractAudit} className={styles.auditedBadge} title=\"Smart Contract Audited\" id='audited'><i className=\"las la-check-circle\"></i>Audited</a>\n\n                                <a target=\"_blank\" rel=\"noreferrer\" href={tokenData.kycVerified} className={styles.verifiedBadge} title=\"KYC Verified\" id='verified'><i className=\"las la-shield-alt\"></i>Verified</a>\n                            </div>\n                        </div>\n                        <div className={styles.countdownContainer}>\n                            <div className={styles.countdownWrapper}>\n                                <p><span >{timeLeft.days}</span></p>:\n                                <p><span >{timeLeft.hours}</span></p>:\n                                <p><span >{timeLeft.minutes}</span></p>:\n                                <p><span >{timeLeft.seconds}</span></p>\n                                {/* <p><span id='days'></span></p>:\n                                <p><span id='hours'></span></p>:\n                                <p><span id='minutes'></span></p>:\n                                <p><span id='seconds'></span></p> */}\n                            </div>\n                        </div>\n                        <div className={styles.actionBlockPrime}>\n                            <input type=\"number\" className={styles.quantityInput} placeholder=\"Exchange Quantity\" id='quantity' onChange={validateExchangeAmount}></input>\n                            <small className={styles.balanceText}>Balance: <small id=\"balance-text\"></small> BNB</small>\n                            <small id='notice-text' className={styles.noticeText}></small>\n                            <small id='error-text' className={styles.errorText}></small>\n                            <button className={styles.buyButton} onClick={buyButtonPressed} id='buy-button'>Buy</button>\n                        </div>\n\n\n                        <div className={styles.rateBlockPrime}>\n                            <p className={styles.currencyToToken}>1 BNB = <span id=\"rate\">{tokenData.rate}</span> {tokenData.tokenSymbol}</p>\n                        </div>\n                        <div className={styles.barBlockPrime}>\n                            <div className={styles.upperStatLine}>\n                                <p className={styles.upperStatCode} id=\"presale-status\">Paused</p>\n                                <p className={styles.upperStatPercentage} id=\"target-percentage\"></p>\n                            </div>\n                            <div className={styles.barActualPrime}>\n                                <div className=\"barRatePrime\" id='bar-percentage'></div>\n                            </div>\n                            <style jsx>{`\n                                .barRatePrime{\n                                    height: 100%;\n                                    width:0%;\n                                    width: ${percentage_}%;\n                                    border-radius: 10px;\n                                    background: linear-gradient(to bottom, rgb(255,180,60),rgb(146, 90, 0));\n                                }\n                                `}\n                            </style>\n                            <div className={styles.lowerStatLine}>\n                                <p className={styles.lowerStatCurrency} id=\"amount-raised\"></p>\n                                <p className={styles.lowerStatToken}>Soft Cap <span id=\"hard-cap\">4000</span> BNB</p>\n                            </div>\n                        </div>\n                        <div className={styles.leastDetailBlockPrime}>\n                            <a className={styles.leastDetailTagPrime} href={bscscanContractUrl_} rel=\"noreferrer\" target=\"_blank\">View Presale Smart Contract Address</a>\n                            {/* <div className={styles.leastDetailTagBlock}>\n                                <p>Presale</p>\n                                <p>ON</p>\n                            </div> */}\n                        </div>\n\n                    </div>\n                    {/* <div className={styles.brandText}><Link href=\"https://www.kredict.com\"><a target=\"_blank\" rel=\"noreferrer\" id=\"host\">Powered by KREDICT</a></Link></div> */}\n\n                </div>\n\n\n\n                <div className={styles.textSection}>\n\n                    <h2 className={styles.header}>Globus ICO</h2>\n                    <h4 className={styles.tag}>\n                        Globus Smart Chain was born from the idea of creating something\n                        where we can create a ecosystem of services and\n                        products which gives boost to global usage of crypto assets\n                        by the crypto community as well as the normal user.\n                    </h4>\n\n                    <div className={styles.actionWrapper}>\n                        <Link href=\"#whitepaper\"><a className={styles.actionBtn}>Whitepaper</a></Link>\n                        <a className={styles.actionBtn} onClick={focusPresale}>Buy Now</a>\n                    </div>\n                </div>\n            </section>\n            <div className={styles.contractNoteSection}>\n                <p className={styles.contractNote}>You can buy GLSC also by sending BNB directly to Presale Contract</p>\n                <p id=\"contract-address\" className={styles.contractAddress}>{tokenData.presaleContract}</p><br/>\n                <a className={styles.actionBtnCopy} onClick={copyAddress}>Copy Address</a>\n            </div>\n        </>\n    )\n}\n\n\n\nMyComponent.displayName = \"MyComponent\"\nexport default MyComponent;\n","D:\\Globus\\components\\Navbar.js",["47"],[],"import styles from \"../styles/Navbar.module.css\"\nimport Link from \"next/link\"\nimport { useEffect } from \"react\";\nfunction Navbar() {\n    useEffect(() => {\n        ethEnabled(false);\n    })\n    return (\n        <>\n            <nav className={styles.navWrapper}>\n                <div className={styles.navbar}>\n                    <div className={styles.logoSection}>\n                        <Link href=\"\"><a>\n                            {/* <h1 className={styles.logoText}>Globus Coin</h1> */}\n                            <img src=\"/globus-logo.png\" alt=\"Globus Logo\" className={styles.logoImage} />\n                        </a></Link>\n                    </div>\n                    <div className={styles.menuSection}>\n                        <ul className={styles.menu}>\n                            <li><Link href=\"#about\"><a className={styles.menuItem}>About</a></Link></li>\n                            <li><Link href=\"#token\"><a className={styles.menuItem}>Token</a></Link></li>\n                            <li><Link href=\"#team\"><a className={styles.menuItem}>Team</a></Link></li>\n                            <li><Link href=\"#roadmap\"><a className={styles.menuItem}>Roadmap</a></Link></li>\n                            <li><Link href=\"#contact\"><a className={styles.menuItem}>Contact</a></Link></li>\n                        </ul>\n                        <a className={styles.connectBtn} id=\"connect-wallet-btn\" onClick={() => ethEnabled(true)}>Connect Wallet</a>\n                    </div>\n                </div>\n            </nav>\n        </>\n    )\n}\n\nexport default Navbar\n\n\nconst Web3 = require(\"web3\");\nconst ethEnabled = async (reload) => {\n    if (window.ethereum) {\n        let accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        window.web3 = new Web3(window.ethereum);\n        document.getElementById(\"connect-wallet-btn\").innerHTML = accounts[0].slice(0, 6) + \"...\" + accounts[0].slice(-6, -1) + accounts[0].slice(-1);\n        document.getElementById(\"connect-wallet-btn\").style.background = \"rgb(25,25,10)\";\n        document.getElementById(\"connect-wallet-btn\").style.borderRadius = \"10px\";\n        document.getElementById(\"connect-wallet-btn\").style.boxShadow = \"none\";\n        document.getElementById(\"connect-wallet-btn\").style.color = \"rgb(255,180,60)\";\n        localStorage.setItem(\"address\", accounts[0]);\n        // forceReload();\n        if (reload) {\n            location.reload();\n        }\n        return true;\n    }\n    else {\n        document.getElementById(\"notice-box\").style.display = \"flex\";\n    }\n    return false;\n}",{"ruleId":"48","severity":1,"message":"49","line":1,"column":1,"nodeType":"50","endLine":32,"endColumn":4},{"ruleId":"51","severity":1,"message":"52","line":197,"column":11,"nodeType":"53","endLine":197,"endColumn":47},{"ruleId":"51","severity":1,"message":"52","line":258,"column":11,"nodeType":"53","endLine":258,"endColumn":61},{"ruleId":"51","severity":1,"message":"52","line":387,"column":11,"nodeType":"53","endLine":387,"endColumn":58},{"ruleId":"51","severity":1,"message":"52","line":392,"column":11,"nodeType":"53","endLine":392,"endColumn":58},{"ruleId":"51","severity":1,"message":"52","line":798,"column":11,"nodeType":"53","endLine":798,"endColumn":61},{"ruleId":"51","severity":1,"message":"52","line":807,"column":13,"nodeType":"53","endLine":807,"endColumn":54},{"ruleId":"51","severity":1,"message":"52","line":815,"column":13,"nodeType":"53","endLine":815,"endColumn":57},{"ruleId":"51","severity":1,"message":"52","line":823,"column":13,"nodeType":"53","endLine":823,"endColumn":55},{"ruleId":"54","severity":1,"message":"55","line":659,"column":8,"nodeType":"56","endLine":659,"endColumn":10,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":766,"column":11,"nodeType":"59","endLine":766,"endColumn":55},{"ruleId":"51","severity":1,"message":"52","line":810,"column":33,"nodeType":"53","endLine":810,"endColumn":114},{"ruleId":"51","severity":1,"message":"52","line":15,"column":29,"nodeType":"53","endLine":15,"endColumn":106},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'abi', 'contractAddress', 'tokenData.email', 'tokenData.facebook', 'tokenData.hardCap', 'tokenData.instagram', 'tokenData.kycVerified', 'tokenData.smartContractAudit', 'tokenData.telegram', 'tokenData.twitter', 'tokenData.website', 'tokenData.whitepaper', and 'tokenData.youtube'. Either include them or remove the dependency array.","ArrayExpression",["60"],"The 'targetDate' object construction makes the dependencies of useEffect Hook (at line 775) change on every render. To fix this, wrap the initialization of 'targetDate' in its own useMemo() Hook.","VariableDeclarator",{"desc":"61","fix":"62"},"Update the dependencies array to be: [abi, contractAddress, tokenData.email, tokenData.facebook, tokenData.hardCap, tokenData.instagram, tokenData.kycVerified, tokenData.smartContractAudit, tokenData.telegram, tokenData.twitter, tokenData.website, tokenData.whitepaper, tokenData.youtube]",{"range":"63","text":"64"},[20982,20984],"[abi, contractAddress, tokenData.email, tokenData.facebook, tokenData.hardCap, tokenData.instagram, tokenData.kycVerified, tokenData.smartContractAudit, tokenData.telegram, tokenData.twitter, tokenData.website, tokenData.whitepaper, tokenData.youtube]"]